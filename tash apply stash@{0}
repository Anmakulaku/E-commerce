[1mdiff --git a/src/components/ImagesBox/ImagesBox.tsx b/src/components/ImagesBox/ImagesBox.tsx[m
[1mindex dc5902e..ce822eb 100644[m
[1m--- a/src/components/ImagesBox/ImagesBox.tsx[m
[1m+++ b/src/components/ImagesBox/ImagesBox.tsx[m
[36m@@ -1,44 +1,50 @@[m
 import { useContext } from 'react';[m
 import { ProductsContext } from '../../context/ProductContext';[m
[31m-import './ImagesBox.css'[m
[32m+[m[32mimport './ImagesBox.css';[m
[32m+[m
 [m
 interface ImagesProps {[m
[31m-  id: number;[m
[31m-  img: string;[m
[31m-  imgOther: string[];[m
[32m+[m[32m  id: string;[m
 }[m
[32m+[m
 const useCart = () => useContext(ProductsContext);[m
 [m
[31m-export default function Images({ id, imgOther }: ImagesProps) {[m
[32m+[m[32mexport default function Images({ id }: ImagesProps) {[m
   const { products } = useCart();[m
 [m
[32m+[m[32m  // ZnajdÅº produkt na podstawie ID[m
   const item = products.find(product => product.id === id);[m
 [m
   if (!item) return null;[m
[32m+[m
   return ([m
     <div className='imagesBox__images'>[m
       <div className='imagesBox__content'>[m
         {/* GÅ‚Ã³wny obraz */}[m
[31m-        <div className='imagesBox__imgMainContainer'>[m
[31m-          <img[m
[31m-            src={`http://localhost:3001/images/${item?.img}`}[m
[31m-            alt='product-image'[m
[31m-            className='imagesBox__imgMain'[m
[31m-          />[m
[31m-        </div>[m
[32m+[m[32m        {item.images.length > 0 && ([m
[32m+[m[32m          <div className='imagesBox__imgMainContainer'>[m
[32m+[m[32m            <img[m
[32m+[m[32m              src={`http://localhost:3000${item.images[0].imageUrl}`}[m[41m [m
[32m+[m[32m              alt='Product Image'[m
[32m+[m[32m              width="150px"[m
[32m+[m[32m            />[m
[32m+[m[32m          </div>[m
[32m+[m[32m        )}[m
[32m+[m[41m        [m
         {/* Dodatkowe obrazy */}[m
[31m-        <div className='imagesBox__imgOthers'>[m
[31m-          {imgOther &&[m
[31m-            imgOther.map((imgUrl, index) => ([m
[32m+[m[32m        {item.images.length > 1 && ([m
[32m+[m[32m          <div className='imagesBox__imgOthers'>[m
[32m+[m[32m            {item.images.slice(1).map((image, index) => ([m
               <div key={index} className='imagesBox__imgOtherContainer'>[m
                 <img[m
[31m-                  src={`http://localhost:3001/images/${imgUrl}`}[m
[32m+[m[32m                  src={`http://localhost:3000${image.imageUrl}`}[m[41m [m
                   alt={`Additional Image ${index}`}[m
[31m-                  className='imagesBox__imgOther'[m
[32m+[m[32m                  width="150px"[m
                 />[m
               </div>[m
             ))}[m
[31m-        </div>[m
[32m+[m[32m          </div>[m
[32m+[m[32m        )}[m
       </div>[m
     </div>[m
   );[m
[1mdiff --git a/src/components/QuantityCounter/QuantityCounter.tsx b/src/components/QuantityCounter/QuantityCounter.tsx[m
[1mindex 326d324..b82b5d5 100644[m
[1m--- a/src/components/QuantityCounter/QuantityCounter.tsx[m
[1m+++ b/src/components/QuantityCounter/QuantityCounter.tsx[m
[36m@@ -3,7 +3,7 @@[m [mimport { useShoppingCart } from '../../context/CartContext';[m
 import './QuantityCounter.css';[m
 [m
 interface QuantityCounterProps {[m
[31m-  itemId: number;[m
[32m+[m[32m  itemId: string;[m
   size: string;[m
 }[m
 [m
[1mdiff --git a/src/components/RemoveButton/RemoveButton.tsx b/src/components/RemoveButton/RemoveButton.tsx[m
[1mindex 8947c67..6d5c657 100644[m
[1m--- a/src/components/RemoveButton/RemoveButton.tsx[m
[1m+++ b/src/components/RemoveButton/RemoveButton.tsx[m
[36m@@ -3,7 +3,7 @@[m [mimport { useShoppingCart } from '../../context/CartContext';[m
 import './RemoveButton.css';[m
 [m
 interface RemoveButtonProps {[m
[31m-  itemId: number;[m
[32m+[m[32m  itemId: string;[m
   size: string;[m
 }[m
 [m
[1mdiff --git a/src/components/ShoppingCart/CartItem.tsx b/src/components/ShoppingCart/CartItem.tsx[m
[1mindex 3e45bf0..3a34068 100644[m
[1m--- a/src/components/ShoppingCart/CartItem.tsx[m
[1m+++ b/src/components/ShoppingCart/CartItem.tsx[m
[36m@@ -4,7 +4,7 @@[m [mimport './CartItem.css';[m
 import { ProductsContext } from '../../context/ProductContext';[m
 [m
 type CartItemProps = {[m
[31m-  id: number;[m
[32m+[m[32m  id: string;[m
   quantity: number;[m
   size: string;[m
 };[m
[36m@@ -22,7 +22,11 @@[m [mexport function CartItem({ id, size, quantity }: CartItemProps) {[m
   return ([m
     <div className='cartItem__content'>[m
       <div className='cartItem__item'>[m
[31m-        <img className='cartItem__itemImg' src={`http://localhost:3001/images/${item.img}`} alt='product image' />[m
[32m+[m[32m      <img[m
[32m+[m[32m              src={`http://localhost:3000${item.images[0].imageUrl}`}[m[41m [m
[32m+[m[32m              alt='Product Image'[m
[32m+[m[32m              width="150px"[m
[32m+[m[32m            />[m
         <div className='cartItem__text'>[m
           <h3 className='cartItem__title'>{item.name}</h3>[m
           <p className='cartItem__title'>Size: {size}</p>[m
[1mdiff --git a/src/components/ShoppingCart/CartItemBox.tsx b/src/components/ShoppingCart/CartItemBox.tsx[m
[1mindex f132f50..81895b7 100644[m
[1m--- a/src/components/ShoppingCart/CartItemBox.tsx[m
[1m+++ b/src/components/ShoppingCart/CartItemBox.tsx[m
[36m@@ -5,7 +5,7 @@[m [mimport { CartItem } from './CartItem';[m
 import './CartItemBox.css';[m
 [m
 interface CartItemBoxProps {[m
[31m-  id: number;[m
[32m+[m[32m  id: string;[m
   size: string;[m
   quantity: number;[m
 }[m
[1mdiff --git a/src/components/Store/StoreItem.tsx b/src/components/Store/StoreItem.tsx[m
[1mindex 48d78ef..6b5cfe1 100644[m
[1m--- a/src/components/Store/StoreItem.tsx[m
[1m+++ b/src/components/Store/StoreItem.tsx[m
[36m@@ -5,7 +5,7 @@[m [mimport { useContext } from 'react';[m
 import { ProductsContext } from '../../context/ProductContext';[m
 [m
 interface StoreItemProps {[m
[31m-  id: number;[m
[32m+[m[32m  id: string;[m
   name: string;[m
   price: number;[m
   img: string;[m
[36m@@ -24,7 +24,13 @@[m [mexport default function StoreItem({ id, name, price, img }: StoreItemProps) {[m
   return ([m
     <Link to={`/product/${id}`} className='storeItem__container'>[m
       <div className='storeItem__img'>[m
[31m-        <img src={`http://localhost:3001/images/${item.img}`} alt='product-image' />[m
[32m+[m[32m        {item.images.length > 0 && ([m
[32m+[m[32m          <img[m
[32m+[m[32m            src={`http://localhost:3000${item.images[0].imageUrl}`}[m[41m [m
[32m+[m[32m            alt='Product Image'[m
[32m+[m[32m            width='150px'[m
[32m+[m[32m          />[m
[32m+[m[32m        )}[m
       </div>[m
       <div className='storeItem__text'>[m
         <h1 className='storeItem__title'>{name}</h1>[m
[1mdiff --git a/src/context/CartContext.tsx b/src/context/CartContext.tsx[m
[1mindex 90746bc..ad53dcc 100644[m
[1m--- a/src/context/CartContext.tsx[m
[1m+++ b/src/context/CartContext.tsx[m
[36m@@ -22,10 +22,10 @@[m [mtype CartContext = {[m
     quantity: number;[m
   };[m
   actions: {[m
[31m-    getItemQuantity: (id: number, size: string) => number;[m
[31m-    increaseCartQuantity: (id: number, size: string) => void;[m
[31m-    decreaseCartQuantity: (id: number, size: string) => void;[m
[31m-    removeFromCart: (id: number, size: string) => void;[m
[32m+[m[32m    getItemQuantity: (id: string, size: string) => number;[m
[32m+[m[32m    increaseCartQuantity: (id: string, size: string) => void;[m
[32m+[m[32m    decreaseCartQuantity: (id: string, size: string) => void;[m
[32m+[m[32m    removeFromCart: (id: string, size: string) => void;[m
     addGiftWrap: () => void;[m
     toggleGiftWrap: () => void;[m
     setSelectedSize: React.Dispatch<React.SetStateAction<string | null>>;[m
[36m@@ -89,12 +89,12 @@[m [mexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {[m
   const { products } = useProducts();[m
   const { isOpen } = useCartOverlay();[m
 [m
[31m-  function getItemQuantity(id: number, size: string) {[m
[32m+[m[32m  function getItemQuantity(id: string, size: string) {[m
     const item = cartItems.find(item => item.id === id && item.size === size);[m
     return item ? item.quantity : 0;[m
   }[m
 [m
[31m-  function increaseCartQuantity(id: number, size: string) {[m
[32m+[m[32m  function increaseCartQuantity(id: string, size: string) {[m
     setCartItems(currItems => {[m
       const newItem = { id, size, quantity: 1 } as CartItem;[m
       const existingItemIndex = currItems.findIndex([m
[36m@@ -110,7 +110,7 @@[m [mexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {[m
     });[m
   }[m
 [m
[31m-  function decreaseCartQuantity(id: number, size: string) {[m
[32m+[m[32m  function decreaseCartQuantity(id: string, size: string) {[m
     const existingItem = cartItems.find([m
       item => item.id === id && item.size === size,[m
     );[m
[36m@@ -128,7 +128,7 @@[m [mexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {[m
     setCartItems(updatedItems);[m
   }[m
 [m
[31m-  function removeFromCart(id: number, size: string) {[m
[32m+[m[32m  function removeFromCart(id: string, size: string) {[m
     setCartItems(currItems => {[m
       return currItems.filter(item => !(item.id === id && item.size === size));[m
     });[m
[1mdiff --git a/src/context/ProductContext.tsx b/src/context/ProductContext.tsx[m
[1mindex b3da6b6..7f6ecf8 100644[m
[1m--- a/src/context/ProductContext.tsx[m
[1m+++ b/src/context/ProductContext.tsx[m
[36m@@ -27,7 +27,9 @@[m [mexport const ProductsProvider: React.FC<{ children: ReactNode }> = ({[m
 [m
   useEffect(() => {[m
     getAllItems().then(data => {[m
[31m-      setProducts(data);[m
[32m+[m[32m      if (data) {[m
[32m+[m[32m        setProducts(data);[m
[32m+[m[32m      }[m
     });[m
   }, []);[m
 [m
[1mdiff --git a/src/pages/ProductPage/ProductPage.tsx b/src/pages/ProductPage/ProductPage.tsx[m
[1mindex 5e67a2e..b098c22 100644[m
[1m--- a/src/pages/ProductPage/ProductPage.tsx[m
[1m+++ b/src/pages/ProductPage/ProductPage.tsx[m
[36m@@ -89,9 +89,7 @@[m [mexport function ProductPage() {[m
   return ([m
     <div className='productPage'>[m
       <div className='productPage__content'>[m
[31m-      <Images id={product.id}[m
[31m-          img={product.img}[m
[31m-          imgOther={product.imgOther} />[m
[32m+[m[32m      <Images id={product.id} />[m
         {/* <div className='productPage__images'>[m
           {renderImages(mainImage, product)}[m
         </div> */}[m
[1mdiff --git a/src/utilities/services/items.service.ts b/src/utilities/services/items.service.ts[m
[1mindex 01e5a12..c60fce3 100644[m
[1m--- a/src/utilities/services/items.service.ts[m
[1m+++ b/src/utilities/services/items.service.ts[m
[36m@@ -21,7 +21,7 @@[m [mexport const getAllItems = async () => {[m
     return data; // Zwraca wszystkie produkty[m
   } catch (error) {[m
     console.error('Error:', error);[m
[31m-    return null; // Zwraca null w przypadku bÅ‚Ä™du[m
[32m+[m[32m    return []; // Zwraca null w przypadku bÅ‚Ä™du[m
   }[m
 };[m
 [m
[1mdiff --git a/src/utilities/types/CartItemType.ts b/src/utilities/types/CartItemType.ts[m
[1mindex 5340bb5..483c241 100644[m
[1m--- a/src/utilities/types/CartItemType.ts[m
[1m+++ b/src/utilities/types/CartItemType.ts[m
[36m@@ -1,7 +1,7 @@[m
 import { Product } from './ProductType';[m
 [m
 export type CartItem = Product & {[m
[31m-  id: number;[m
[32m+[m[32m  id: string;[m
   quantity: number;[m
   size?: string;[m
   name?: string;[m
[1mdiff --git a/src/utilities/types/ProductType.ts b/src/utilities/types/ProductType.ts[m
[1mindex ae875ca..021bd65 100644[m
[1m--- a/src/utilities/types/ProductType.ts[m
[1m+++ b/src/utilities/types/ProductType.ts[m
[36m@@ -1,10 +1,14 @@[m
[32m+[m[32mexport interface Image {[m
[32m+[m[32m  imageUrl: string;[m
[32m+[m[32m}[m
[32m+[m
 export interface Product {[m
[31m-  id: number;[m
[32m+[m[32m  id: string;[m
   gender: string;[m
   category: string;[m
   subcategory?: string;[m
[31m-  img: string;[m
[31m-  imgOther: string[];[m
[32m+[m[32m  images: Image[];[m
[32m+[m[32m  // imgOther: string[];[m
   name: string;[m
   price: number;[m
   addDate: Date;[m
